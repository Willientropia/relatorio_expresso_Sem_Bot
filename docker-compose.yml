# docker-compose.yml
version: '3'

services:
  db:
    image: postgres:16-alpine
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=relatorio_expresso_db
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    networks:
      - app-network

  backend:
    build: ./backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./backend/media:/app/media
    environment:
      - DEBUG=1
      - DJANGO_ALLOWED_HOSTS=localhost,127.0.0.1,backend,0.0.0.0,*
      # Usaremos uma configuração dinâmica para o IP do front-end
      - FRONTEND_URL=http://${HOST_IP:-localhost}:5173
      - DB_NAME=relatorio_expresso_db
      - DB_USER=user
      - DB_PASS=password
      - DB_HOST=db
      - DB_PORT=5432
    command: sh -c "python manage.py runserver 0.0.0.0:8000"
    depends_on:
      - db
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - ./backend/media:/app/media
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://${HOST_IP:-localhost}:8000
    command: npm run dev -- --host 0.0.0.0
    depends_on:
      - backend
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
