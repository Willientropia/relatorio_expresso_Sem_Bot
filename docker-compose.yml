# docker-compose.yml
services:
  db:
    image: postgres:16-alpine
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=relatorio_expresso_db
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    networks:
      - app-network

  backend:
    build: ./backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      # Use a bind mount to map the host directory directly to the container
      - ./backend/media:/app/media 
    # A porta 8000 não precisa mais ser exposta para o host,
    # apenas para a rede interna do Docker, o que é o padrão.
    environment:
      - DEBUG=1
      - DJANGO_ALLOWED_HOSTS=localhost,127.0.0.1,backend
      - DB_NAME=relatorio_expresso_db
      - DB_USER=user
      - DB_PASS=password
      - DB_HOST=db
      - DB_PORT=5432
    command: sh -c "python manage.py runserver 0.0.0.0:8000"
    depends_on:
      - db
    networks:
      - app-network

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      # Map the same host directory to the Nginx container
      - ./backend/media:/app/media 
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: