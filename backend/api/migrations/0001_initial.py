# Generated by Django 5.2.2 on 2025-06-23 23:14

import api.models
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('cpf', models.CharField(max_length=14, unique=True)),
                ('cpf_titular', models.CharField(blank=True, max_length=14, null=True, verbose_name='CPF do Titular da UC')),
                ('data_nascimento', models.DateField(blank=True, null=True)),
                ('endereco', models.CharField(max_length=200)),
                ('telefone', models.CharField(blank=True, max_length=15, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UnidadeConsumidora',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=50)),
                ('endereco', models.CharField(max_length=200)),
                ('tipo', models.CharField(choices=[('Residencial', 'Residencial'), ('Comercial', 'Comercial'), ('Industrial', 'Industrial'), ('Rural', 'Rural')], default='Residencial', max_length=20)),
                ('data_vigencia_inicio', models.DateField(default=django.utils.timezone.now)),
                ('data_vigencia_fim', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unidades_consumidoras', to='api.customer')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FaturaTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mes_referencia', models.DateField()),
                ('status', models.CharField(choices=[('PENDING', 'Pendente'), ('IN_PROGRESS', 'Em Progresso'), ('SUCCESS', 'Sucesso'), ('FAILURE', 'Falha')], default='PENDING', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('unidade_consumidora', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='api.unidadeconsumidora')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Fatura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mes_referencia', models.DateField()),
                ('arquivo', models.FileField(upload_to=api.models.upload_to)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('unidade_consumidora', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='faturas', to='api.unidadeconsumidora')),
            ],
            options={
                'ordering': ['-mes_referencia'],
            },
        ),
        migrations.AddConstraint(
            model_name='unidadeconsumidora',
            constraint=models.UniqueConstraint(condition=models.Q(('data_vigencia_fim__isnull', True)), fields=('customer', 'codigo'), name='unique_active_uc_per_customer'),
        ),
        migrations.AlterUniqueTogether(
            name='fatura',
            unique_together={('unidade_consumidora', 'mes_referencia')},
        ),
    ]
